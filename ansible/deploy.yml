---
- hosts: all
  gather_facts: false
  vars_prompt:
    - name: "devops_workshop_image_tag"
      prompt: "Devops workshop image tag"
      private: false

  tasks:
    - set_fact: devops_workshop_image_tag={{ devops_workshop_image_tag }}
      tags: always

- hosts: webservers
  gather_facts: false
  # become: true
  # become_user: "{{ hexlet_basics_run_user }}"

  tasks:
    - name: Create a network
      docker_network:
        name: "{{ devops_workshop_docker_network }}"

    # - template:
    #     src: environment.j2
    #     dest: "{{ devops-workshop_env_file }}"
    #   tags: env

    - name: download app image
      docker_image:
        name: "{{ devops_workshop_image_name }}:{{ devops_workshop_image_tag }}"
        force: true

    - name: download nginx image
      docker_image:
        name: "{{ devops_workshop_nginx_image_name }}:{{ devops_workshop_image_tag }}"
        force: true

    # - name: download postgres image
    #     docker_image:
    #       name: "{{ devops-workshop_postgres_image_name }}:{{ devops-workshop_image_tag }}"
    #       force: true

#    - name: run migrations
#      docker_container:
#        recreate: true
#        detach: false
#        name: hexlet-basics-migrations
#        command: "mix ecto.migrate"
#        image: "{{ hexlet_basics_image_name }}:{{ hexlet_basics_image_tag }}"
#        state: started
#        env_file: "{{ hexlet_basics_env_file }}"
#        env:
#          MIX_ENV: prod
#        volumes:
#          - "/tmp:/tmp"
#          - "/var/tmp:/var/tmp"
#      run_once: true
#      tags: [webserver]

    - name: start nginx
      docker_container:
        recreate: true
        name: nginx
        image: "{{ devops_workshop_nginx_image_name }}:{{ devops_workshop_image_tag }}"
        state: started
        restart_policy: always
        published_ports:
          - "80:80"
        networks:
          - name: "{{ devops_workshop_docker_network }}"
      tags: [webserver]

    - name: start application
      docker_container:
        recreate: true
        name: app
        image: "{{ devops_workshop_image_name }}:{{ devops_workshop_image_tag }}"
        state: started
        command: sh -c "python manage.py runserver 0.0.0.0:8000"
        restart_policy: always
#        env_file: "{{ hexlet_basics_env_file }}"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/tmp:/tmp"
          - "/opt:/opt"
          - "/var/tmp:/var/tmp"
        networks:
          - name: "{{ devops_workshop_docker_network }}"
      tags: [webserver]
